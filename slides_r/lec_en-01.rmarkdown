---
title: "An Introduction to R"
subtitle: "Why Learn to Code?"
author: "Julien Martin"
institute: "University of Ottawa"
date: today
from: markdown+emoji
format:
  blackboard-revealjs: 
    width: 1244
    height: 700
    chalkboard: true
#    output-location: column-fragment
#    logo: assets/MAD_logo_small_rb.png
    footer: Intro to R
    show-notes: false
    output-ext: slides.html
  html:
    self-contained: true
    number-sections: true
    format-links: false
    css: assets/css/notes.css
    number-depth: 2
    output-ext: notes.html
    comments:
      hypothesis: true
editor:
  render-on-save: false
---


## Learning outcomes


```{r}
#| echo: false
#| purl: false
rev <- ifelse(knitr::pandoc_to() == "revealjs", TRUE, FALSE)
no_rev <- !rev
```

```{r}
#| label: setup-slides
#| include: false
#| purl: false
#| eval: !expr 'rev'
source("themes_board.r")
theme_set(theme_blackboard())
def_col_geom("white")

```

```{r}
#| label: setup-notes
#| include: false
#| purl: false
#| eval: !expr 'no_rev'
source("themes_board.r")
theme_set(theme_whiteboard())
```


**this course (hopefully) will ...** 

- introduce you to using R `r emoji::emoji("heavy_check_mark")`

- help your research become more robust and reproducible `r emoji::emoji("heavy_check_mark")`

::: {.content-visible when-format="revealjs"}
. . .
:::

**this course (definitely) won't ...**

- teach you everything there is to know about R `r emoji::emoji("x")`

- make you feel completely comfortable with R `r emoji::emoji("x")`

## What is R?
![](assets/img/Rlogo.png){.absolute top=200 right=0 width="200" height="200"}

- environment for statistical computing, graphics and programming

- created by Ross Ihaka and Robert Gentleman (1996) 

- maintained by international R-core development team 

- many, people contribute to R and the wider R community


## extra R information

:::: {.columns}

:::{.column}
- more information can be found at  
<https://www.r-project.com>

- download R from the CRAN website  
<https://cran.r-project.org/>
:::

::: {.column}
![](assets/img/r-project.png)
:::
::::

## why is R considered hard?


- high initial investment in time to learn R

- unfamiliar command line environment

- frustrating (and sometimes) inconsistent syntax

- analysis and figures can take longer (initially!)

- relatively steep learning curve

- it's not actually that hard, just unfamiliar

## why you should learn R


-  it’s free and platform independent

- it’s the software of choice for many students, academics, industries and charities worldwide

- highly flexible and extensive

- encourages you think about your research  
questions, data and analyses



## why you should learn R
![](assets/img/repo2.png){.absolute height=590 right=0 bottom=10}


-  it allows you to keep an exact and reproducible record of your analyses

- transparent

- other people^[including the future you!] can  
  reproduce your analysis

- easily share your code (GitHub)

- [[open science](https://en.wikipedia.org/wiki/Open_science)]{.emph}
 


## why you should learn R
![](assets/img/plots.png){.absolute height=700 right=300 bottom=10}

-  excellent graphics capabilities

## why you should learn R
![](assets/img/jobs.png){.absolute height=600 right=50 bottom=0}


- employability

- opportunity to get involved  
with a fantastic and supportive  
community



# Interacting with R

## GUI
#![](assets/img/rconsole.png){fig-align="center"}

---

:::: {.columns}
::: {.column}
[R]{.emph}
![](assets/img/engine.png){fig-align="center"}
:::

::: {.column}
[IDE]{.emph}
![](assets/img/car.png){fig-align="center"}
:::
::::




## RStudio
![](assets/img/Rstudio_2.png){fig-align="center"}

## VS Code
![](assets/img/vscode.png){fig-align="center"}


# Using R

## objects

- commands are typed in the editor and then sourced into the console  
at the > prompt


```{r}
#| echo: true
2 + 2
```


- R is object orientated. You can create variable and assign value(s) to them


```{r}
#| echo: true
a <- 2 + 2
a
```


## objects

- once created, operations can be performed on variables 


```{r}
#| echo: true
a <- 2 + 2
b <- 3 * 2

a + b
```


- very powerful and flexible 


## functions

- functions contain a set of instructions that allow you to perform a specific task(s)


```{r}
#| echo: true
#| eval: false
numbers <- c(2, 3, 4, 5, 6) # <1> 
numbers

mean(numbers) # <2>
# estimating the variance  # <3>
var(numbers) # <4>
```

1. use the concatenate function
2. use mean function
3. this is a comment noted with #
4. use variance function


## functions
- you can install user contributed packages to increase versatility and power

- there are packages for almost anything

- install packages from [CRAN](https://cran.r-project.org/), [Bioconductor](https://www.bioconductor.org/) and [GitHub](https://github.com/)

- packages are easy to install in R



## functions


- Write your own functions

- function to calculate standard error


```{r}
#| eval: false
#| echo: true
se_fnc <- function(x) {         # <1>
  std.x <- sd(x)                # <2>
  nos.x <- length(x)            # <2>
  se.x <- std.x / (sqrt(nos.x)) # <2>
  print(se.x)                   # <3>
}
se_fnc(c(2, 3, 4, 5, 6))       # <4>
```

1. define function name and arguments
1. calculate SD, number of obs, then SE
1. define function output
1. use your new function

## syntax 

- R is case sensitive `A` is not the same as `a` 

- commands are generally separated by a new line, but you can also use a `;` (rare)

- anything that follows the hash symbol `#` will be ignored by R. Use this to comment your code 

- a series of commands can be grouped using braces `{ }`

- write pretty code by following a [code style guide](https://google.github.io/styleguide/Rguide.html) 



## help 

- when you need help for a function use `help()` or `?`


```{r}
#| eval: false
#| echo: true
help("plot")    # open help file for the function plot
```


or equivalently


```{r}
#| eval: false
#| echo: true
?plot
```


- or to search across all help files use `help.search("plot")` or `??plot`


## help 



- [Duckduckgo_it](https://duckduckgo.com/): Try online search
You'll be surprised how many other people have probably had the same problem and solved it.

- [Stack Overflow](http://stackoverflow.com/questions/tagged/r): There are thousands of questions relevant to R on Stack Overflow

- [Here](https://stackoverflow.com/questions/tagged/r?sort=votes) are the most popular ones, ranked by vote.

- make sure you include a [reproducible example](http://stackoverflow.com/questions/5963269/how-to-make-a-great-r-reproducible-example/5963610#5963610) to get the most useful advice. A reproducible example is a minimal example that lets others who are trying to help you to see the error themselves.


## tips

- use R regularly

- learning R is not a memory test, you have your R scripts

- you don’t need to know everything about R

- don't stare at code for hours.

- there are many ways to tackle a particular problem

[the time invested now will be more than payed back in the future.]{.emph}


# Thanks!



Credit: I borrowed slides from [Alex Douglas](https://github.com/alexd106/).

